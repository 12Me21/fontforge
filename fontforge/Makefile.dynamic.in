prefix = @prefix@
exec_prefix = @exec_prefix@

sharedir = @prefix@/share/fontforge
srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = ..
VPATH = @srcdir@
bindir = @bindir@
libdir = @libdir@
plugindir = $(sharedir)/plugins

LIBTOOL = @LIBTOOL@
CC = @CC@
O = @O_EXTENSION@

X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_11LIB = @X_11LIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
STATIC_LIBS = @STATIC_LIBS@

FF_VERSION=1
FF_REVISION=0
FF_AGE=0

fontforge_LIBOBJECTS =  autohint.$O autosave.$O autowidth.$O bitmapdlg.$O \
 bitmapview.$O bvedit.$O charview.$O cursors.$O \
 cvaddpoints.$O cvexport.$O cvgetinfo.$O cvhints.$O cvimages.$O cvknife.$O \
 cvpalettes.$O cvpointer.$O cvruler.$O cvshapes.$O cvstroke.$O cvtranstools.$O \
 cvundoes.$O dumpbdf.$O dumppfa.$O fontinfo.$O fontview.$O fvcomposit.$O \
 fvfonts.$O fvimportbdf.$O fvmetrics.$O images.$O metricsview.$O \
 parsepfa.$O parsettf.$O prefs.$O psread.$O namelist.$O savefontdlg.$O \
 sfd.$O splashimage.$O splinefill.$O splineoverlap.$O splinesave.$O \
 splinesaveafm.$O splinestroke.$O splineutil.$O splineutil2.$O stamp.$O \
 start.$O tottf.$O transform.$O uiutil.$O utils.$O windowmenu.$O  \
 zapfnomen.$O othersubrs.$O autotrace.$O openfontdlg.$O encoding.$O \
 problems.$O scstyles.$O alignment.$O parsettfbmf.$O \
 macbinary.$O crctab.$O scripting.$O freetype.$O gotodlg.$O search.$O \
 combinations.$O tilepath.$O sftextfield.$O displayfonts.$O ikarus.$O \
 cvhand.$O cvfreehand.$O simplifydlg.$O winfonts.$O tottfgpos.$O tottfaat.$O \
 charinfo.$O splineorder2.$O genttfinstrs.$O ttfinstrs.$O cvgridfit.$O \
 cvdebug.$O showatt.$O kernclass.$O nonlineartrans.$O effects.$O \
 histograms.$O ttfspecial.$O svg.$O parsettfatt.$O contextchain.$O \
 macenc.$O statemachine.$O splinerefigure.$O mm.$O \
 parsettfvar.$O tottfvar.$O pua.$O stemdb.$O anchorsaway.$O palmfonts.$O \
 cvdgloss.$O groups.$O parsepdf.$O plugins.$O bdfinfo.$O \
 glyphcomp.$O unicoderange.$O ufo.$O ofl.$O lookups.$O sfd1.$O @FF_EXTRA_FILES@ \
 python.$O featurefile.$O math.$O nowakowskittfinstr.$O http.$O spiro.$O \
 bezctx_ff.$O nouiutil.$O scriptingdlg.$O fvfontsdlg.$O splinechar.$O \
 splinefont.$O
DIFFOBJS = sfddiff.o sfd.o diffstubs.o stamp.o namelist.o pua.o
ACORNOBJS = acorn2sfd.o sfd.o diffstubs.o psunicodenames.o stamp.o

_CFLAGS = -I$(top_srcdir)/inc -I$(srcdir) -I. @WFLAGS@ $(X_CFLAGS) \
    @DEFS@ '-DSHAREDIR="$(sharedir)"' -DLIBDIR='"$(libdir)"' \
    @CPPFLAGS@ '-DPREFIX="@prefix@"'
CFLAGS = @CFLAGS@ $(_CFLAGS)

#I used to include -L/usr/lib explicitly after static_libs. Not sure why. Should be implied & breaks 64bit compiles
LDFLAGS = @LDFLAGS@
LIBS = -rpath $(libdir) $(X_LIBS) ../libgdraw.la ../libgunicode.la \
    $(X_PRE_LIBS) $(X_11LIB) $(X_EXTRA_LIBS) @LIBS@ $(STATIC_LIBS) -lm
DLIBS = -rpath $(libdir) ../libgunicode.la @LIBS@ $(STATIC_LIBS) -lm

all: @FINAL_TARGET@ sfddiff fontimage fontlint

fontforge: main.o $(fontforge_LIBOBJECTS)
	$(LIBTOOL) --mode=link $(CC) -export-dynamic $(LDFLAGS) -o fontforge \
	    main.o $(fontforge_LIBOBJECTS) $(LIBS)

../libfontforge.la: main.o $(fontforge_LIBOBJECTS)
	$(LIBTOOL) --mode=link $(CC) -no-undefined $(CFLAGS) @LDFLAGS@ \
	    -o ../libfontforge.la $(fontforge_LIBOBJECTS) $(LIBS) \
	    -rpath $(libdir) -version-info $(FF_VERSION):$(FF_REVISION):$(FF_AGE)
	$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o fontforge \
	    main.o ../libfontforge.la $(LIBS)

sfddiff: sfddiff.pe
	echo "#!$(bindir)/fontforge -lang=ff" > $@
	cat $< >> $@
	chmod +x $@

fontimage: fontimage.pe
	echo "#!$(bindir)/fontforge -lang=ff" > $@
	cat $< >> $@
	chmod +x $@

fontlint: fontlint.pe
	echo "#!$(bindir)/fontforge -lang=ff" >$@
	cat $< >>$@
	chmod +x $@

sfddiff.old: $(DIFFOBJS)
	$(LIBTOOL) --mode=link $(CC) -o sfddiff.old $(DIFFOBJS) $(DLIBS)

acorn2sfd: $(ACORNOBJS)
	$(LIBTOOL) --mode=link $(CC) -o acorn2sfd $(ACORNOBJS) $(DLIBS)

# The slight error introduced occasionally by optimization turns out to have
# disasterous effects. This file may not be compiled with the optimizer.
# On the other hand we do need CPPFLAGS to get the right includes...
splinerefigure.o: $(srcdir)/splinerefigure.c $(srcdir)/splinefont.h
	$(CC) -g -c -o splinerefigure.o $(_CFLAGS) $(srcdir)/splinerefigure.c

splinerefigure.lo: $(srcdir)/splinerefigure.c $(srcdir)/splinefont.h
	$(LIBTOOL) --mode=compile $(CC) -g -c -o splinerefigure.lo $(_CFLAGS) $(srcdir)/splinerefigure.c

%.o: %.c

%.o: %.c $(srcdir)/splinefont.h $(srcdir)/views.h $(srcdir)/stemdb.h $(srcdir)/ttf.h $(srcdir)/unicoderange.h $(srcdir)/psfont.h $(srcdir)/groups.h $(srcdir)/edgelist.h $(srcdir)/edgelist2.h
	$(CC) $(CFLAGS) -c $<

%.lo: %.c

%.lo: %.c $(srcdir)/splinefont.h $(srcdir)/views.h $(srcdir)/stemdb.h $(srcdir)/ttf.h $(srcdir)/unicoderange.h $(srcdir)/psfont.h $(srcdir)/groups.h $(srcdir)/edgelist.h $(srcdir)/edgelist2.h
	$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -c $<

clean:
	-rm -f fontforge sfddiff fontimage acorn2sfd fontimage fontlint
	-rm -f *.o
	-rm -f *.lo
	-rm -rf .libs

distclean cleaner: clean
	-rm -f Makefile

install:
	( cd .. ; make install )

FontForge-MenuShortCuts.pot: *.c
	xgettext -kH_ -oFontForge-MenuShortCuts.pot *.c ../gdraw/*.c
	patch < potmstitle.patch

FontForge.pot: *.c utf8.pot
	echo "If this doesn't work try make fontforge-old.pot instead"
	xgettext --from-code=UTF-8 -k_ -kN_ -kS_ -kU_ -kNU_ -kP_:1,2 --add-comments=GT: -oFontForge.pot *.c ../gdraw/*.c
	patch < pottitle.patch

# xgettext has caniptions and strips any non-ASCII characters from my strings
# but I do occasionally want to use unicode characters (TeX, arrows, Increment)
# so I have put these messages in utf8.pot which I manage by hand. non-ASCII
# strings work just fine as keys. It does mean that my pot files should be
# viewed in utf8 though.

# I am told that new versions of xgettext support an option --from-code=UTF-8
# unfortunately this works on none of the systems I use, and I haven't found
# it documented. If it worked I would not need utf8.pot.
FontForge-old.pot: *.c utf8.pot
	xgettext -k_ -kN_ -kS_ -kP_:1,2 --add-comments=GT: -oFontForge.pot *.c ../gdraw/*.c
	cat utf8.pot >> FontForge.pot
	patch < pottitle.patch
