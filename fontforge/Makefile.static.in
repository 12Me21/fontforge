prefix = @prefix@
exec_prefix = @exec_prefix@

sharedir = @prefix@/share/fontforge
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

bindir = @bindir@

CC = @CC@

X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_11LIB = @X_11LIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
STATIC_LIBS = @STATIC_LIBS@

fontforge_LIBOBJECTS = asmfpst.$O autohint.$O autosave.$O autotrace.$O autowidth.$O \
 bezctx_ff.$O bitmapchar.$O bitmapcontrol.$O bvedit.$O clipnoui.$O crctab.$O \
 cvexport.$O cvimages.$O cvundoes.$O dumpbdf.$O dumppfa.$O effects.$O encoding.$O \
 featurefile.$O fontviewbase.$O freetype.$O fvcomposit.$O fvfonts.$O fvimportbdf.$O \
 fvmetrics.$O genttfinstrs.$O glyphcomp.$O http.$O ikarus.$O lookups.$O macbinary.$O \
 macenc.$O mathconstants.$O mm.$O namelist.$O nonlineartrans.$O noprefs.$O nouiutil.$O \
 nowakowskittfinstr.$O ofl.$O othersubrs.$O palmfonts.$O parsepdf.$O parsepfa.$O \
 parsettfatt.$O parsettfbmf.$O parsettf.$O parsettfvar.$O plugins.$O print.$O \
 psread.$O pua.$O python.$O savefont.$O scripting.$O scstyles.$O search.$O \
 sfd1.$O sfd.$O sflayout.$O spiro.$O splinechar.$O splinefill.$O \
 splinefont.$O splineorder2.$O splineoverlap.$O splinerefigure.$O \
 splinesaveafm.$O splinesave.$O splinestroke.$O splineutil2.$O splineutil.$O \
 stamp.$O start.$O stemdb.$O svg.$O tottfaat.$O tottfgpos.$O tottf.$O \
 tottfvar.$O ttfinstrs.$O ttfspecial.$O ufo.$O unicoderange.$O utils.$O \
 winfonts.$O zapfnomen.$O
fontforge_UIOBJECTS = alignment.o anchorsaway.o autowidthdlg.o bdfinfo.o \
 bitmapdlg.o bitmapview.o charinfo.o charview.o clipui.o combinations.o \
 contextchain.o cursors.o cvaddpoints.o cvdebug.o cvdgloss.o cvexportdlg.o \
 cvfreehand.o cvgetinfo.o cvgridfit.o cvhand.o cvhints.o \
 cvimportdlg.o cvknife.o cvpalettes.o cvpointer.o cvruler.o cvshapes.o \
 cvstroke.o cvtranstools.o displayfonts.o effectsui.o encodingui.o \
 fontinfo.o fontview.o freetypeui.o fvfontsdlg.o fvmetricsdlg.o gotodlg.o \
 groups.o histograms.o images.o kernclass.o lookupui.o macencui.o \
 math.o metricsview.o mmdlg.o nonlineartransui.o openfontdlg.o prefs.o \
 problems.o pythonui.o savefontdlg.o scriptingdlg.o scstylesui.o \
 searchview.o sftextfield.o showatt.o simplifydlg.o splashimage.o startui.o \
 statemachine.o tilepath.o transform.o ttfinstrsui.o uiutil.o windowmenu.o
fontforge_SCRIPTOBJ = startnoui.o
fontforge_OBJECTS=$(fontforge_LIBOBJECTS) $(@exeOBJECTS@)

DIFFOBJS = sfddiff.o sfd.o diffstubs.o stamp.o namelist.o pua.o
ACORNOBJS = acorn2sfd.o sfd.o diffstubs.o psunicodenames.o stamp.o

_CFLAGS = -I$(top_srcdir)/inc -I$(srcdir) -I. @WFLAGS@ $(X_CFLAGS) \
    @DEFS@ '-DSHAREDIR="$(sharedir)"' -DLIBDIR='"$(libdir)"' \
    @CPPFLAGS@
CFLAGS = @CFLAGS@ $(_CFLAGS)

LDFLAGS = @LDFLAGS@
LIBS = -L../libs $(X_LIBS) @LINK_WITH_GDRAW@ ../libs/libgutils.a \
    ../libs/libgunicode.a \
    $(X_PRE_LIBS) $(X_11LIB) $(X_EXTRA_LIBS) @LIBS@ $(STATIC_LIBS) -lm
DLIBS = ../libs/libgunicode.a @LIBS@ $(STATIC_LIBS) -lm

all: fontforge sfddiff fontimage fontlint

fontforge: $(fontforge_OBJECTS)
	$(CC) -o fontforge $(LDFLAGS) $(fontforge_OBJECTS) $(LIBS)

sfddiff: sfddiff.pe
	echo "#!$(bindir)/fontforge -lang=ff" >sfddiff
	cat sfddiff.pe >>sfddiff
	chmod +x sfddiff

fontimage: fontimage.pe
	echo "#!$(bindir)/fontforge -lang=ff" >fontimage
	cat fontimage.pe >>fontimage
	chmod +x fontimage

fontlint: fontlint.pe
	echo "#!$(bindir)/fontforge -lang=ff" >fontlint
	cat fontlint.pe >>fontlint
	chmod +x fontlint

sfddiff.old: $(DIFFOBJS)
	$(LIBTOOL) --mode=link $(CC) -o sfddiff.old $(DIFFOBJS) $(DLIBS)

acorn2sfd: $(ACORNOBJS)
	$(CC) -o acorn2sfd $(ACORNOBJS) $(DLIBS)

# The slight error introduced occasionally by optimization turns out to have
# disasterous effects. This file may not be compiled with the optimizer.
# On the other hand we do need CPPFLAGS to get the right includes...
splinerefigure.o: $(srcdir)/splinerefigure.c $(srcdir)/splinefont.h
	$(CC) -g -c -o splinerefigure.o $(_CFLAGS) $(srcdir)/splinerefigure.c

%.o: %.c

%.o: %.c $(srcdir)/splinefont.h $(srcdir)/views.h $(srcdir)/stemdb.h $(srcdir)/ttf.h $(srcdir)/unicoderange.h $(srcdir)/psfont.h $(srcdir)/groups.h $(srcdir)/edgelist.h $(srcdir)/edgelist2.h $(srcdir)/uiinterface.h $(srcdir)/fontforgevw.h
	$(CC) $(CFLAGS) -c $<

clean:
	-rm -f fontforge sfddiff fontimage acorn2sfd fontimage fontlint
	-rm -f *.o
	-rm -f *.lo
	-rm -rf .libs

distclean cleaner: clean
	-rm -f Makefile

FontForge-MenuShortCuts.pot: *.c
	xgettext -kH_ -oFontForge-MenuShortCuts.pot *.c ../gdraw/*.c
	patch < potmstitle.patch

FontForge.pot: *.c utf8.pot
	echo "If this doesn't work try make fontforge-old.pot instead"
	xgettext --from-code=UTF-8 -k_ -kN_ -kS_ -kU_ -kNU_ -kP_:1,2 --add-comments=GT: -oFontForge.pot *.c ../gdraw/*.c
	patch < pottitle.patch

# xgettext has caniptions and strips any non-ASCII characters from my strings
# but I do occasionally want to use unicode characters (TeX, arrows, Increment)
# so I have put these messages in utf8.pot which I manage by hand. non-ASCII
# strings work just fine as keys. It does mean that my pot files should be
# viewed in utf8 though.
FontForge-old.pot: *.c utf8.pot
	xgettext -k_ -kN_ -kS_ -kP_:1,2 --add-comments=GT: -oFontForge.pot *.c ../gdraw/*.c
	cat utf8.pot >> FontForge.pot
	patch < pottitle.patch
