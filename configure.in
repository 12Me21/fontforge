dnl Process this file with autoconf to produce a configure script.

AC_INIT(pfaedit/pfaedit.h)
AC_PROG_CC
AC_DISABLE_STATIC
AC_CANONICAL_HOST
AC_PROG_LIBTOOL

gww_nodynamic="no"
gww_needsstatic="no"
case "$host" in
*-apple-darwin*) AC_DEFINE(NODYNAMIC)
gww_nodynamic="yes"
AC_DEFINE(_CursorsMustBe16x16)
AC_DEFINE(_Keyboard,1)
AC_DEFINE(__Mac,1)
LIBS="/System/Library/Frameworks/CoreServices.framework/CoreServices $LIBS"
 ;;
powerpc-*-*linux*)
AC_DEFINE(_Keyboard,3)
 ;;
*sparc*)
AC_DEFINE(_Keyboard,2)
 ;;
*-pc-cygwin*)
AC_DEFINE(_BrokenBitmapImages)
AC_DEFINE(_ModKeysAutoRepeat)
AC_DEFINE(__CygWin,1)
gww_nodynamic="yes"
gww_needsstatic="yes"
 ;;
esac

AC_SEARCH_LIBS(dlopen, dl) dnl some systems have this in libc (Darwin uses dyld)
AC_SEARCH_LIBS(inet_aton, resolv) dnl some systems have this in libc

dnl Is there a better way to add a directory to the include path?

FreeType2_IncRoot=
if sh -c "freetype-config --prefix" >/dev/null 2>&1 ; then
 FreeType2_IncRoot=`freetype-config --prefix`
 AC_CHECK_FILE($FreeType2_IncRoot/include/freetype2,CFLAGS="$CFLAGS -I$FreeType2_IncRoot/include/freetype2/",FreeType2_IncRoot=)
fi

if test "FreeType2_IncRoot" = "" >/dev/null 2>&1 ; then
 AC_CHECK_FILE(/usr/include/freetype2,CFLAGS="$CFLAGS -I/usr/include/freetype2/",[
 AC_CHECK_FILE(/usr/local/include/freetype2,CFLAGS="$CFLAGS -I/usr/local/include -I/usr/local/include/freetype2/",[
 AC_CHECK_FILE(/usr/X11R6/include/freetype2,CFLAGS="$CFLAGS -I/usr/X11R6/include -I/usr/X11R6/include/freetype2/",)])])
fi

dnl Some old versions of lib(un)gif don't work for us, they've got the
dnl Function argument in the wrong place. So two checks for gif.

AC_CHECK_LIB(ungif, DGifOpenFileName, [
echo -n checking for ExtensionBlock.Function in gif_lib.h...
AC_TRY_COMPILE([#include <gif_lib.h>], [ ExtensionBlock foo; foo.Function=3; ], echo " " yes , [echo " " no
    ac_cv_lib_ungif_DGifOpenFileName=no
    AC_DEFINE(_NO_LIBUNGIF)])
] , AC_DEFINE(_NO_LIBUNGIF))

AC_CHECK_LIB(z, deflateEnd, : ,AC_DEFINE(_NO_LIBPNG), -lm) 
AC_CHECK_LIB(png, png_create_read_struct, : ,AC_DEFINE(_NO_LIBPNG), -lz -lm) 
AC_CHECK_LIB(jpeg, jpeg_CreateDecompress, :  ,AC_DEFINE(_NO_LIBJPEG)) 
AC_CHECK_LIB(tiff, TIFFOpen, : , AC_DEFINE(_NO_LIBTIFF), -lm )
AC_CHECK_LIB(freetype, FT_New_Face, : ,AC_DEFINE(_NO_FREETYPE)) 

dnl older libc's don't have snprintf

AC_CHECK_FUNC(snprintf, : , AC_DEFINE(_NO_SNPRINTF))

AC_C_CONST
AC_PATH_XTRA
AC_SUBST(X_11LIB)
X_11LIB=-lX11
if test "$no_x" = "yes"; then
 X_11LIB=
fi
echo -n checking for long long ...
AC_TRY_COMPILE(,[long long foo=0x400000000000;],[ AC_DEFINE(_HAS_LONGLONG)
    echo " " yes] , echo " " no )

dnl If we can't/don't want to use dynamic libraries then we must link with
dnl the static libraries we've found

AC_SUBST(STATIC_LIBS)
STATIC_LIBS=
if test "$gww_nodynamic" = "yes"; then
 if test "$gww_needsstatic" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -static"
 fi
 if test "$ac_cv_lib_ungif_DGifOpenFileName" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -lungif"
 fi
 if test "$ac_cv_lib_png_png_create_read_struct" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -lpng -lz"
 fi
 if test "$ac_cv_lib_tiff_TIFFOpen" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -ltiff"
 fi
 if test "$ac_cv_lib_jpeg_jpeg_CreateDecompress" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -ljpeg"
 fi
 if test "$ac_cv_lib_freetype_FT_New_Face" = "yes"; then
  STATIC_LIBS="$STATIC_LIBS -lfreetype"
 fi
fi

test -d libs || mkdir libs

AC_OUTPUT(Makefile Unicode/Makefile gdraw/Makefile pfaedit/Makefile)
if test -e toys >/dev/null 2>&1 ; then
  AC_OUTPUT( toys/Makefile )
fi

echo Configuration defines: $DEFS
if test "$STATIC_LIBS" != ""; then
  echo Static Libraries: $STATIC_LIBS
fi

if test "$no_x" = "yes"; then
 echo " *****************************************************************"
 echo " * This version of pfaedit will only run scripts. No X libraries *"
 echo " * were found so there is NO user interface!!!! If you want a UI *"
 echo " * try installing X11 on your system.                            *"
 echo " *****************************************************************"
fi

dnl EOF
